name: Deploy User Dev Service to AWS Lambda

on:
  push:
    branches: 
      - user_dev
    paths:
      - 'user/**'

jobs:

  CI:
    runs-on: ubuntu-latest
    environment: depelopment

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        id: cache-pip
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('user/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          cd user
          pip install -r requirements.txt

      - name: Create archive of dependencies and API files
        run: |
          source venv/bin/activate
          cd venv/lib/python3.10/site-packages
          zip -r9 $GITHUB_WORKSPACE/user_dev.zip .

          cd $GITHUB_WORKSPACE/user/app
          echo "SECRET_KEY=${{ secrets.SECRET_KEY_JWT }}" > .env
          echo "SQLALCHEMY_DATABASE_URL=${{ secrets.SQLALCHEMY_DATABASE_URL }}" >> .env
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> .env
          cd ..
          cd $GITHUB_WORKSPACE/user
          zip -g $GITHUB_WORKSPACE/user_dev.zip -r app

      - name: Verify Zip Content
        run: unzip -l user_dev.zip

      # Step to install AWS CLI
      - name: Install AWS CLI
        run: sudo apt-get install -y awscli

      # Step to configure AWS credentials after installing AWS CLI
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Verificar conexi√≥n con S3
        run: aws s3 ls

      - name: Upload to S3
        run: aws s3 cp user_dev.zip s3://aquashieldbackenddev/user_dev.zip 

  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    environment: depelopment

    if: github.ref == 'refs/heads/user_dev' && github.event_name == 'push'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy new Lambda
        run: |
          set -e
          aws lambda update-function-code --function-name user_dev --s3-bucket aquashieldbackenddev --s3-key user_dev.zip
